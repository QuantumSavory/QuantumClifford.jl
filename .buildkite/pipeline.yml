env:
  CODECOV_TOKEN: adb3f22a-231a-4f7b-8ed4-7c6c56453cbe
  JULIA_NUM_THREADS: auto
  PYTHON: ""
  PYCALL_DEBUG_BUILD: yes

steps:
  - label: "Package Tests - {{matrix.LABEL}}"
    plugins:
      - JuliaCI/julia#v1:
          version: "1"
      - QuantumSavory/julia-xvfb#v1:
      - JuliaCI/julia-test#v1: ~
      - JuliaCI/julia-coverage#v1:
          codecov: true
    command:
      - echo "Julia depot path $${JULIA_DEPOT_PATH}"
      - julia --project='~' -e '
        using Pkg;
        pkg"dev .";'
    env:
      JET_TEST: {{matrix.JET_TEST}}
      ECC_CODE_PROPERTIES: {{matrix.ECC_CODE_PROPERTIES}}
      ECC_ENCODING: {{matrix.ECC_ENCODING}}
      ECC_DECODING: {{matrix.ECC_DECODING}}
      ECC_SYNDROME_MEASUREMENT_CORRECTNESS: {{matrix.ECC_SYNDROME_MEASUREMENT_CORRECTNESS}}
      ECC_SYNDROME_CIRCUIT_EQUIVALENCE: {{matrix.ECC_SYNDROME_CIRCUIT_EQUIVALENCE}}
      CUDA_TEST: {{matrix.CUDA_TEST}}
      ROCm_TEST: {{matrix.ROCm_TEST}}
      OpenCL_TEST: {{matrix.OpenCL_TEST}}
    agents:
      queue: {{matrix.QUEUE}}
    matrix:
      adjustments:
        - with:
            LABEL: "JET"
            QUEUE: default
            JET_TEST: true
        - with:
            LABEL: "ECC Properties"
            QUEUE: default
            ECC_CODE_PROPERTIES: true
        - with:
            LABEL: "ECC Encoding"
            QUEUE: default
            ECC_ENCODING: true
        - with:
            LABEL: "ECC Decoding"
            QUEUE: default
            ECC_ENCODING: true
        - with:
            LABEL: "ECC Syndrome Measurement"
            QUEUE: default
            ECC_SYNDROME_MEASUREMENT_CORRECTNESS: true
        - with:
            LABEL: "ECC Syndrome Circuit"
            QUEUE: default
            ECC_SYNDROME_CIRCUIT_EQUIVALENCE: true
        - with:
            LABEL: "ECC Throws"
            QUEUE: default
            ECC_THROWS: true
        - with:
            LABEL: "ECC Bespoke"
            QUEUE: default
            ECC_BESPOKE_TESTS: true
        - with:
            LABEL: "GPU - CUDA"
            QUEUE: cuda
            CUDA_TEST: true
        - with:
            LABEL: "GPU - ROCm"
            QUEUE: rocm
            ROCm_TEST: true
        - with:
            LABEL: "GPU - OpenCL"
            QUEUE: default
            OpenCL_TEST: true

  - label: "Downstream QuantumSavory"
    plugins:
      - JuliaCI/julia#v1:
          version: "1"
      - QuantumSavory/julia-xvfb#v1:
    command:
      - echo "Julia depot path $${JULIA_DEPOT_PATH}"
      - julia --project=$(mktemp -d) -e '
        using Pkg;
        pkg"dev .";
        Pkg.add("QuantumSavory");
        Pkg.build("QuantumSavory");
        Pkg.test("QuantumSavory");'
  - label: "Downstream BPGates"
    plugins:
      - JuliaCI/julia#v1:
          version: "1"
      - QuantumSavory/julia-xvfb#v1:
    command:
      - echo "Julia depot path $${JULIA_DEPOT_PATH}"
      - julia --project=$(mktemp -d) -e '
        using Pkg;
        pkg"dev .";
        Pkg.add("BPGates");
        Pkg.build("BPGates");
        Pkg.test("BPGates");'
  - label: "Downstream QuantumSymbolics"
    plugins:
      - JuliaCI/julia#v1:
          version: "1"
      - QuantumSavory/julia-xvfb#v1:
    command:
      - echo "Julia depot path $${JULIA_DEPOT_PATH}"
      - julia --project=$(mktemp -d) -e '
        using Pkg;
        pkg"dev .";
        Pkg.add("QuantumSymbolics");
        Pkg.build("QuantumSymbolics");
        Pkg.test("QuantumSymbolics");'
